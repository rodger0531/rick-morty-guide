{"version":3,"sources":["characters/bottom-controls.js","components/select-field.js","characters/top-controls.js","characters/character-item.js","characters/character-list.js","characters/index.js","logo.png","homeBackground.mp4","home.js","episodes/episode-item.js","episodes/episodes-list.js","episodes/index.js","App.js","reportWebVitals.js","index.js","core/constants.js"],"names":["BottomControls","info","loading","currentPage","setCurrentPage","useState","total","setTotal","useEffect","count","className","defaultCurrent","pageSize","disabled","current","onChange","page","size","Option","Select","SelectField","data","placeholder","style","minWidth","val","map","item","value","TopControls","setFilterParams","onSearch","input","prev","Object","keys","values","FilterFilled","Search","name","enterButton","SPECIES_TYPE","species","CharacterItem","image","status","gender","location","content","dimension","color","COLOR_PALETTE","YELLOW","src","alt","PINK","CharacterList","error","console","log","message","graphQLErrors","Array","fill","_","idx","Avatar","shape","active","characters","results","id","GET_CHARACTERS","gql","CharacterPage","filterParams","useQuery","variables","Home","isMuted","setIsMuted","videoRef","useRef","ref","video","type","autoPlay","muted","loop","onClick","icon","faVolumeUp","faVolumeMute","EpisodeItem","episodes","episode","title","slice","aired","TabPane","Tabs","EpisodesList","seasonsList","reduce","t","x","season","push","entries","tab","GET_EPISODES","EpisodePage","fetchMore","next","updateQuery","fetchMoreResult","paths","Content","Layout","Sider","withRouter","width","breakpoint","collapsedWidth","rickAndMortyLogo","theme","mode","defaultSelectedKeys","selectedKeys","indexOf","pathname","Item","to","exact","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","addTypename","document","documentElement","setAttribute","ReactDOM","ApolloProvider","getElementById","module","exports","BROWN","SALMON","LIME"],"mappings":"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","file":"static/js/main.0c2a868f.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Pagination } from \"antd\";\n\nexport const BottomControls = ({\n  info,\n  loading,\n  currentPage,\n  setCurrentPage,\n}) => {\n  const [total, setTotal] = useState(0);\n  useEffect(() => {\n    if (info && info.count !== total) {\n      setTotal(info.count);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [info]);\n  const fetchData = (page, size) => {\n    setCurrentPage(page);\n  };\n  return (\n    <div className=\"my-5\">\n      <Pagination\n        defaultCurrent={1}\n        total={total}\n        pageSize={20}\n        disabled={loading}\n        current={currentPage}\n        onChange={fetchData}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Select } from \"antd\";\nconst { Option } = Select;\n\nexport const SelectField = ({\n  data,\n  placeholder,\n  onChange,\n  className = \"\",\n}) => {\n  const onFilterChange = (val) => {\n    onChange(val);\n  };\n  return (\n    <>\n      <Select\n        className={className}\n        placeholder={placeholder}\n        style={{ minWidth: \"160px\" }}\n        onChange={onFilterChange}\n      >\n        <Option>All</Option>s\n        {data.map((item) => (\n          <Option key={item} value={item}>\n            {item}\n          </Option>\n        ))}\n      </Select>\n    </>\n  );\n};\n","import React from \"react\";\nimport { SelectField } from \"../components/select-field\";\nimport { SPECIES_TYPE } from \"../core/constants\";\nimport { FilterFilled } from \"@ant-design/icons\";\nimport { Input } from \"antd\";\n\nexport const TopControls = ({ setFilterParams, setCurrentPage }) => {\n  const onSearch = (input) => {\n    setFilterParams((prev) => ({\n      ...prev,\n      [Object.keys(input)[0]]: Object.values(input)[0],\n    }));\n    setCurrentPage(0);\n  };\n\n  const placeholder = (\n    <div className=\"flex items-center\">\n      <FilterFilled className=\"mr-3\" />\n      <span>Filter by species</span>\n    </div>\n  );\n\n  return (\n    <div className=\"my-5 md:mt-10 text-base flex flex-col justify-center md:flex-row items-center\">\n      <Input.Search\n        className=\"max-w-xs mx-5\"\n        placeholder=\"Who are you looking for?\"\n        onSearch={(val) => onSearch({ name: val })}\n        enterButton\n      />\n      <SelectField\n        className=\"mt-3 md:mt-0\"\n        data={SPECIES_TYPE}\n        placeholder={placeholder}\n        onChange={(val) => onSearch({ species: val })}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Popover } from \"antd\";\nimport { COLOR_PALETTE } from \"../core/constants\";\n\nexport const CharacterItem = ({\n  data: { image, name, species, status, gender, location },\n}) => {\n  const content = (\n    <div className=\"text-base text-yellow-900\">\n      <p>\n        <b>{name}</b>\n      </p>\n      <p>Gender: {gender}</p>\n      <p>Species: {species}</p>\n      <p>Location: {location.name}</p>\n      <p>Dimension: {location.dimension || \"unknown\"}</p>\n      <p>Status: {status}</p>\n    </div>\n  );\n  return (\n    <>\n      <Popover\n        content={content}\n        color={COLOR_PALETTE.YELLOW}\n        className=\"text-lg\"\n      >\n        <img src={image} alt=\"Avatar\" className=\"rounded-xl inline-block\" />\n      </Popover>\n      <p className=\"truncate text-base\" style={{ color: COLOR_PALETTE.PINK }}>\n        {name}\n      </p>\n    </>\n  );\n};\n","import React from \"react\";\nimport { CharacterItem } from \"./character-item\";\nimport { Skeleton, Empty } from \"antd\";\n\nexport const CharacterList = ({ error, data, loading }) => {\n  return (\n    <div className=\"\">\n      {error && console.log(\"Error!\", error.message, error.graphQLErrors)}\n      {!data && error && !loading && <Empty />}\n      <div className=\"grid grid-cols-2 md:grid-cols-5 md:grid-rows-4 gap-6\">\n        {loading &&\n          Array(20)\n            .fill(0)\n            .map((_, idx) => (\n              <div key={`${idx}`} className=\"h-32 xl:h-40\">\n                <Skeleton.Avatar\n                  className=\"rounded-xl h-36 md:h-28 xl:h-36 w-36 md:w-28 xl:w-36\"\n                  shape=\"square\"\n                  active\n                />\n              </div>\n            ))}\n        {data?.characters.results.map((item) => (\n          <div key={item.id} className=\"w-36 md:w-28 xl:w-36\">\n            <CharacterItem data={item} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { BottomControls } from \"./bottom-controls\";\nimport { TopControls } from \"./top-controls\";\nimport { CharacterList } from \"./character-list\";\n\nconst GET_CHARACTERS = gql`\n  query GET_CHARACTERS($page: Int, $species: String, $name: String) {\n    characters(page: $page, filter: { species: $species, name: $name }) {\n      info {\n        count\n        pages\n        next\n        prev\n      }\n      results {\n        name\n        id\n        species\n        gender\n        status\n        image\n        location {\n          name\n          dimension\n        }\n      }\n    }\n  }\n`;\n\nconst CharacterPage = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [filterParams, setFilterParams] = useState({ name: \"\", species: \"\" });\n  const { loading, error, data } = useQuery(GET_CHARACTERS, {\n    variables: {\n      page: currentPage,\n      species: filterParams.species,\n      name: filterParams.name,\n    },\n  });\n\n  return (\n    <div className=\"h-full flex flex-col justify-between\">\n      <TopControls\n        setFilterParams={setFilterParams}\n        setCurrentPage={setCurrentPage}\n      />\n      <CharacterList data={data} error={error} loading={loading} />\n      <BottomControls\n        info={data?.characters.info}\n        loading={loading}\n        setCurrentPage={setCurrentPage}\n        currentPage={currentPage}\n      />\n    </div>\n  );\n};\n\nCharacterPage.propTypes = {};\n\nexport default CharacterPage;\n","export default __webpack_public_path__ + \"static/media/logo.54e125f0.png\";","export default __webpack_public_path__ + \"static/media/homeBackground.5cc6cfe1.mp4\";","import React, { useRef, useState } from \"react\";\nimport video from \"./homeBackground.mp4\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faVolumeUp, faVolumeMute } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Home = () => {\n  const [isMuted, setIsMuted] = useState(false);\n  const videoRef = useRef(null);\n\n  const toggleMute = () => {\n    videoRef.current.muted = !videoRef.current.muted;\n    setIsMuted(!videoRef.current.muted);\n  };\n\n  return (\n    <>\n      {/* <FontAwesomeIcon icon={faVolumeMute} /> */}\n      <video\n        ref={videoRef}\n        src={video}\n        type=\"video/mp4\"\n        className=\"w-screen w-auto\"\n        autoPlay\n        muted\n        loop\n      />\n      <button\n        type=\"button\"\n        className=\"absolute outline-none top-20 right-20\"\n        onClick={toggleMute}\n      >\n        <FontAwesomeIcon\n          className=\"opacity-60 hover:opacity-100 duration-200\"\n          icon={isMuted ? faVolumeUp : faVolumeMute}\n          size=\"lg\"\n        />\n      </button>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Card } from \"antd\";\nimport { COLOR_PALETTE } from \"../core/constants\";\n\nexport const EpisodeItem = ({ episodes }) => {\n  return (\n    <div>\n      {episodes.map((episode) => (\n        <div\n          key={episode.episode}\n          className=\"site-card-border-less-wrapper mb-3\"\n        >\n          <Card\n            type=\"inner\"\n            title={`Episode ${episode.episode.slice(4)}`}\n            className=\"text-left text-xl\"\n          >\n            <div className=\"flex justify-between\">\n              <p style={{ color: COLOR_PALETTE.PINK }}>{episode.name}</p>\n              <p className=\"text-sm opacity-30 align-baseline flex items-end\">\n                Aired: {episode.aired}\n              </p>\n            </div>\n          </Card>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./episode-list.css\";\nimport { Tabs } from \"antd\";\nimport { EpisodeItem } from \"./episode-item\";\nconst { TabPane } = Tabs;\n\nexport const EpisodesList = ({ data, loading }) => {\n  const seasonsList = data?.episodes.results.reduce((t, x) => {\n    const season = x.episode.slice(0, 3);\n    if (t[season]) {\n      t[season].push(x);\n    } else {\n      t[season] = [x];\n    }\n\n    return t;\n  }, {});\n  return (\n    <div className=\"card-container m-10\">\n      <Tabs type=\"card\" size=\"large\">\n        {seasonsList &&\n          Object.entries(seasonsList).map(([season, episodes], idx) => (\n            <TabPane tab={season} key={idx + 1} className=\"overflow-auto\">\n              <EpisodeItem episodes={episodes} />\n            </TabPane>\n          ))}\n      </Tabs>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { EpisodesList } from \"./episodes-list\";\n\nconst GET_EPISODES = gql`\n  query ($page: Int) {\n    episodes(page: $page) {\n      info {\n        next\n      }\n      results {\n        name\n        episode\n        aired: air_date\n      }\n    }\n  }\n`;\n\nconst EpisodePage = () => {\n  const { loading, error, data, fetchMore } = useQuery(GET_EPISODES, {\n    variables: {\n      page: 1,\n    },\n  });\n\n  useEffect(() => {\n    if (data?.episodes.info.next) {\n      fetchMore({\n        variables: { page: data.episodes.info.next },\n        updateQuery: (prev, { fetchMoreResult, variables }) => {\n          return {\n            episodes: {\n              info: fetchMoreResult.episodes.info,\n              results: [\n                ...prev.episodes.results,\n                ...fetchMoreResult.episodes.results,\n              ],\n            },\n          };\n        },\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  return (\n    <div className=\"h-full w-full\">\n      <EpisodesList data={data} loading={loading} />\n    </div>\n  );\n};\n\nexport default EpisodePage;\n","import \"./App.css\";\nimport { Switch, Route, NavLink, withRouter, Redirect } from \"react-router-dom\";\nimport CharacterPage from \"./characters\";\nimport { Layout, Menu } from \"antd\";\nimport rickAndMortyLogo from \"./logo.png\";\nimport { Home } from \"./home\";\nimport EpisodePage from \"./episodes\";\n\nconst paths = [\"/\", \"/characters\", \"/episodes\"];\n\nconst { Content, Sider } = Layout;\nfunction App({ location }) {\n  return (\n    <Layout className=\"min-h-screen\">\n      <Sider\n        width=\"300px\"\n        className=\"flex justify-center\"\n        breakpoint=\"lg\"\n        collapsedWidth=\"0\"\n        // onBreakpoint={(broken) => {\n        //   console.log(broken);\n        // }}\n        // onCollapse={(collapsed, type) => {\n        //   console.log(collapsed, type);\n        // }}\n      >\n        <img src={rickAndMortyLogo} alt=\"Logo\" className=\"h-20 m-4\" />\n        <Menu\n          className=\"text-xl mt-10\"\n          theme=\"dark\"\n          mode=\"inline\"\n          defaultSelectedKeys={[\"1\"]}\n          selectedKeys={[`${paths.indexOf(location.pathname) + 1}`]}\n        >\n          <Menu.Item key=\"1\" className=\"my-5\">\n            <NavLink to={paths[0]}>Home</NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"2\" className=\"my-5\">\n            <NavLink to={paths[1]}>Characters</NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"3\" className=\"my-5\">\n            <NavLink to={paths[2]}>Episodes</NavLink>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout>\n        <Content className=\"App\">\n          <Switch>\n            <Route exact path={paths[0]} component={Home} />\n            <Route path={paths[1]} component={CharacterPage} />\n            <Route path={paths[2]} component={EpisodePage} />\n            <Route render={() => <Redirect to={{ pathname: \"/\" }} />} />\n          </Switch>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { ApolloProvider } from \"@apollo/client/react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst client = new ApolloClient({\n  uri: \"https://rickandmortyapi.com/graphql\",\n  cache: new InMemoryCache({\n    addTypename: false,\n  }),\n});\n\ndocument.documentElement.setAttribute(\"data-theme\", \"dark\");\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Router>\n      <App />\n    </Router>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = {\n  SPECIES_TYPE: [\n    \"Human\",\n    \"Humanoid\",\n    \"Alien\",\n    \"Mythological Creature\",\n    \"Robot\",\n    \"Cronenberg\",\n    \"Disease\",\n    \"Poopybutthole\",\n    \"Planet\",\n    \"unknown\",\n  ],\n  COLOR_PALETTE: {\n    BROWN: \"#44281d\",\n    SALMON: \"#e4a788\",\n    YELLOW: \"#f0e14a\",\n    LIME: \"#97ce4c\",\n    PINK: \"#e89ac7\",\n  },\n};\n"],"sourceRoot":""}